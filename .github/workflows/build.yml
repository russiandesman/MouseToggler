name: Build

on:
    workflow_dispatch:

jobs:
    build-installer:
        runs-on: windows-latest
        steps:
          - name: Checkout sources
            uses: actions/checkout@v3

          - name: Get Version Suffix
            id: ver
            shell: pwsh
            run: |
                $ver = $env:GITHUB_REF_NAME
                if ($env:GITHUB_REF_TYPE -eq "branch") {
                    $ver = "${env:GITHUB_REF_NAME}_${env:GITHUB_SHA}"
                }
                Write-Output "ver = $ver"
                echo "ver=$ver" >> $env:GITHUB_OUTPUT

          - name: Find Dotnet Hardcoded
            id: find_csc
            shell: pwsh
            run: |
                $cscPath = "C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe"
                if (Test-Path -Path $cscPath -PathType Leaf) {
                    Write-Output "csc.exe found at $cscPath"
                    echo "cscPath=$cscPath" >> $env:GITHUB_OUTPUT
                } else {
                    Write-Error "csc.exe not found at $cscPath. .NET Framework 4.x may not be installed."
                    exit 1
                }   
                
          - name: Compile binary
            shell: pwsh
            run: |
                ${{ steps.find_csc.outputs.cscPath }} /target:exe /out:mouse_toggle.exe mouse_toggle.cs

          - name: Prepare icons
            shell: cmd
            run: |
                choco install -y imagemagick
                call refreshenv
                magick -quiet -density 300 -define icon:auto-resize=256,128,96,64,48,32,16 -background none icons\icon_xl.svg icons\xl.ico
                magick -quiet -density 300 -define icon:auto-resize=256,128,96,64,48,32,16 -background none icons\icon_l.svg  icons\l.ico
                magick -quiet -density 300 -define icon:auto-resize=256,128,96,64,48,32,16 -background none icons\icon_n.svg  icons\n.ico
                copy icons\xl.ico setup_icon.ico

          - name: Build installer package
            uses: Minionguyjpro/Inno-Setup-Action@v1.2.7
            with:
                path: install.iss
                options: |
                    /O+
                    /DMyAppVersion=${{ steps.ver.outputs.ver }}

          - name: Result upload
            uses: actions/upload-artifact@v4
            with:
              name: installer_${{ steps.ver.outputs.ver }}
              path: Output
